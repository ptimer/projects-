{"version":3,"sources":["logo.svg","modals/CreateTask.js","modals/EditTask.js","components/Card.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","modal","toggle","createItem","useState","title","setTitle","description","setDescription","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","EditTask","updateItem","item","index","Card","removeItem","setModal","colors","primaryColor","secondaryColor","style","TodoList","list","setList","useEffect","getCachedData","newData","map","i","idx","cacheDataTo","filter","data","localStorage","setItem","JSON","stringify","parse","getItem","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdc5443c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nconst CreateTask = ({modal, toggle, createItem}) => {\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target\r\n\r\n    if(name == 'title'){\r\n      setTitle(value)\r\n    }\r\n\r\n    if(name == 'description'){\r\n      setDescription(value)\r\n    }\r\n  }\r\n\r\n  const handleCreate = (e) => {\r\n    toggle()\r\n    createItem({title: title, description: description})\r\n    setTitle('')\r\n    setDescription('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Создать задачу</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className='form-group'>\r\n              <label>Название</label>\r\n              <input type='text' className='form-control' value={title} onChange={handleChange} name='title'/>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Описание</label>\r\n              <textarea rows='5' className='form-control' value={description} onChange={handleChange} name='description' type='text'/>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleCreate}>Создать</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Закрыть</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nconst EditTask = ({modal, toggle, updateItem, item}) => {\r\n  const [title, setTitle] = useState(item.title)\r\n  const [description, setDescription] = useState(item.description)\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target\r\n\r\n    if(name == 'title'){\r\n      setTitle(value)\r\n    }\r\n\r\n    if(name == 'description'){\r\n      setDescription(value)\r\n    }\r\n  }\r\n\r\n  const handleSave = (e) => {\r\n    toggle()\r\n    updateItem(item.index, {title: title, description: description})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Редактировать задачу</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className='form-group'>\r\n              <label>Название</label>\r\n              <input type='text' className='form-control' value={title} onChange={handleChange} name='title'/>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label>Описание</label>\r\n              <textarea rows='5' className='form-control' value={description} onChange={handleChange} name='description' type='text'/>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleSave}>Сохранить</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Закрыть</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTask;","import React, {useState, useEffect} from 'react'\r\nimport EditTask from '../modals/EditTask'\r\n\r\nconst Card = ({index, title, description, updateItem, removeItem}) => {\r\n\t\r\n\tconst [modal, setModal] = useState(false)\r\n\tconst toggle = () => setModal(!modal)\r\n\r\n    const colors = [\r\n        {\r\n            primaryColor : '#5D93E1',\r\n            secondaryColor : '#ECF3FC'\r\n        },\r\n        {\r\n            primaryColor : '#F9D288',\r\n            secondaryColor : '#FEFAF1'\r\n        },\r\n        {\r\n            primaryColor : '#5DC250',\r\n            secondaryColor : '#F2FAF1'\r\n        },\r\n        {\r\n            primaryColor : '#F48687',\r\n            secondaryColor : '#FDF1F1'\r\n        },\r\n        {\r\n            primaryColor : '#B964F7',\r\n            secondaryColor : '#F3F0FD'\r\n        }\r\n    ]\r\n\r\n\treturn(\r\n\t\t<div className='card-wrapper'>\r\n            <div className='card-top' style={{'backgroundColor': colors[index%5].primaryColor}}></div>\r\n            <div className='task-holder'>\r\n                <span className='card-header' style={{'backgroundColor': colors[index%5].secondaryColor, 'borderRadius': '10px'}}>{title}</span>\r\n                <p className = 'mt-3'>{description}</p>\r\n\r\n                <div style={{'position': 'absolute', 'right' : '20px', 'bottom' : '20px'}}>\r\n                    <i className='far fa-edit mr-3' style={{'color' : colors[index%5].primaryColor, 'cursor' : 'pointer'}} onClick = {() => setModal(true)}></i>\r\n                    <i className='fas fa-trash-alt' style = {{'color' : colors[index%5].primaryColor, 'cursor' : 'pointer'}} onClick = {() => removeItem(index)}></i>\r\n                </div>\r\n        \t</div>\r\n        \t<EditTask modal={modal} toggle={toggle} updateItem={updateItem} item={{title, index,description}}/>\r\n        </div>\r\n\t)\r\n}\r\n\r\nexport default Card","import React, {useState, useEffect} from 'react'\r\nimport CreateTask from '../modals/CreateTask'\r\nimport Card from './Card'\r\n\r\nconst TodoList = () => {\r\n\tconst [modal, setModal] = useState(false);\r\n\tconst [list, setList] = useState([\r\n\t\t{title: 'React', description: 'Сделать компонент карточки товара'},\r\n\t\t{title: 'Дом', description: 'Застелить кровать'},\r\n\t\t{title: 'Питомцы', description: 'Выгулять собаку'}\r\n\t])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(getCachedData('list')){\r\n\t\t\tsetList(getCachedData('list'))\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst toggle = () => setModal(!modal)\r\n\r\n\tconst createItem = i => {\r\n\t\tsetList([...list, i])\r\n\t\tcacheDataTo('list', [...list, i])\r\n\t}\r\n\r\n\tconst updateItem = (index, newData) => {\r\n        setList(list.map((i, idx) => {if(index == idx){return newData} return i}))\r\n        cacheDataTo('list', list.map((i, idx) => {if(index == idx){return newData} return i}))\r\n    }\r\n\r\n    const removeItem = index => {\r\n        setList(list.filter((i, idx) => idx != index))\r\n        cacheDataTo('list', list.filter((i, idx) => idx != index))\r\n    }\r\n\r\n    const cacheDataTo = (name, data) => {\r\n    \tlocalStorage.setItem(name, JSON.stringify(data))\r\n    }\r\n\r\n    const getCachedData = (name) => {\r\n    \treturn  JSON.parse(localStorage.getItem(name))\r\n    }\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<div className='header text-center'>\r\n\t\t\t\t<h3>Список задач</h3>\r\n\t\t\t\t<button className='btn btn-primary mt-2' onClick={toggle}>Создать задачу</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='task-container'>\r\n\t\t\t\t{list.map((i, index) => <Card \r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\tindex={index} \r\n\t\t\t\t\ttitle={i.title} \r\n\t\t\t\t\tdescription={i.description}\r\n\t\t\t\t\tupdateItem={updateItem}\r\n\t\t\t\t\tremoveItem={removeItem}/>)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<CreateTask modal={modal} toggle={toggle} createItem={createItem}/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TodoList","import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './components/TodoList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nfunction App(){\n\n  return (\n    <div className=\"App\">\n      <TodoList />\n      <div className='fixed-copy'>By Bilous Illia - <a href='https://ptimer.github.io' \n      target='_blank'>GitHub</a></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}